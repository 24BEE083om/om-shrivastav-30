class Matrix:
    """
    A class to represent a 3x3 matrix and perform operations like addition,
    multiplication, and transpose.
    """
    def __init__(self, matrix):
        if len(matrix) == 3 and all(len(row) == 3 for row in matrix):
            self.matrix = matrix
        else:
            raise ValueError("Matrix must be 3x3.")

    def __add__(self, other):
        """Adds two matrices."""
        return Matrix([[self.matrix[i][j] + other.matrix[i][j] for j in range(3)] for i in range(3)])

    def __mul__(self, other):
        """Multiplies two matrices."""
        result = [[0 for _ in range(3)] for _ in range(3)]
        for i in range(3):
            for j in range(3):
                for k in range(3):
                    result[i][j] += self.matrix[i][k] * other.matrix[k][j]
        return Matrix(result)

    def transpose(self):
        """Returns the transpose of the matrix."""
        return Matrix([[self.matrix[j][i] for j in range(3)] for i in range(3)])

    def display(self):
        """Displays the matrix."""
        for row in self.matrix:
            print(row)

# Example usage
matrix1 = Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
matrix2 = Matrix([[9, 8, 7], [6, 5, 4], [3, 2, 1]])

print("Matrix 1:")
matrix1.display()
print("\nMatrix 2:")
matrix2.display()

# Addition
print("\nAddition of Matrix 1 and Matrix 2:")
addition_result = matrix1 + matrix2
addition_result.display()

# Multiplication
print("\nMultiplication of Matrix 1 and Matrix 2:")
multiplication_result = matrix1 * matrix2
multiplication_result.display()

# Transpose
print("\nTranspose of Matrix 1:")
transpose_result = matrix1.transpose()
transpose_result.display()
